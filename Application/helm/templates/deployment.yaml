kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.ReplicaNumber }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      volumes:
        - name: index-html
          configMap:
            name: {{ .Chart.Name }}-html
            defaultMode: 420 
      containers:
        env:
          - name: PORT
            value: {{ .Values.containers.containerPort | quote}}
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: {{ .Values.containers.containerPort}}
            scheme: HTTP
          initialDelaySeconds: 1
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health/readiness
            port: {{ .Values.containers.containerPort}}
            scheme: HTTP
          initialDelaySeconds: 1
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: {{ .Chart.Name }}
          ports:
            - containerPort: {{ .Values.containers.containerPort }}
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          image: {{ .Values.containers.image }}:{{ .Values.containers.tag }}
          volumeMounts:
            - name: index-html
              mountPath: /tmp/html
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10